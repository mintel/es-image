---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: grafana
    name: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: grafana
      name: grafana
      tier: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/part-of: grafana
        app.mintel.com/elasticsearch-client: elasticsearch-log-client
        name: grafana
        tier: frontend
    spec:
      containers:
      - env:
        - name: GF_INSTALL_PLUGINS
          value: camptocamp-prometheus-alertmanager-datasource,fzakaria-simple-annotations-datasource,grafana-piechart-panel,natel-discrete-panel,btplc-peak-report-panel,btplc-alarm-box-panel,btplc-status-dot-panel,vonage-status-panel,btplc-trend-box-panel
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
          value: Viewer
        image: grafana/grafana:6.5.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: grafana
        ports:
        - containerPort: 3000
          name: web
          protocol: TCP
        - containerPort: 6001
          name: auth-proxy
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /etc/grafana/grafana.ini
          name: grafana-config
          subPath: grafana.ini
        - mountPath: /etc/grafana/provisioning/datasources/datasources.yml
          name: grafana-config
          subPath: datasources.yml
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: grafana-config
        name: grafana-config
      - emptyDir: {}
        name: grafana-storage
